s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
s3c <- -55 # MPa
s1t <- 51 # MPa
s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
View(s)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
?solve
solve(KA,s)
solve(s, KA)
epsilon <- matrix(c(0.02, 0.1))
epsilon[2,1]
sigma <- matrix(c(175, 185))
sigma
n <- (log(sigma[2,1]) - log(sigma[1,1])) /
((log(epsilon[2,1]) - log(epsilon[1,1])))
k <- sigma[1,1]/ epsilon[1,1]^n
hollomon <- function(e, n, k){
sigma <- k * e ^ n
}
check <- hollomon(epsilon, n, k)
e.test <- seq(0.0,0.5, 0.005)
s.check <- hollomon(e.test, n, k)
plot(epsilon, sigma)
lines(e.test, s.check)
######## PROBLEM 3.16
# compressive stress / tensile stress [MPa]
sc.st <- matrix(c(0.9, .8, .7, .6, .5, .4, .35, .325, .32))
# x 10^(-2)
ep <- matrix(c(0.1, .25, .4, .65, .95, 1.5, 2, 2.5, 3))
e <- ep * 10 ^ (-2)
plot(ep, sc.st)
lines(ep, sc.st)
fsigma.T <- function (e){
300 + 450 * e ^ 0.5 }
sigma.C <- sc.st * fsigma.T(e)
sigma.C
sigma.T <- fsigma.T(e)
## final Plot
par(mfrow = c(2,1))
plot(e, sigma.C, xlab = "Strain",
ylab = "Compressive Stress [MPa]")
lines(e, sigma.C)
plot(e, sigma.T, xlab = "Strain",
ylab = "Tensile Stress [MPa]")
lines(e,sigma.T)
plot(eP, sc.st, xlab = "Strain",
ylab ="Ratio of Compressive-to-Axial Stress [MPa]")
plot(ep, sc.st, xlab = "Strain",
ylab ="Ratio of Compressive-to-Axial Stress [MPa]")
lines(ep, sc.st)
epsilon <- matrix(c(0.02, 0.1))
epsilon[2,1]
sigma <- matrix(c(175, 185))
sigma
n <- (log(sigma[2,1]) - log(sigma[1,1])) /
51/3
55/3
matrix(c(1,1,51/3,-55/3), ncol = 2)
matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
solve(KA,s)
solve(KA)
test <- solve(KA)
test %*% s
1.73 * 18.3
sqrt(1/3)*s3c
sqrt(1/3)*s1t
A <- matrix(c(1,1,17,-18.3),ncol = 2)
b <- matrix(c(29.44, -31.75),ncol = 1)
solve(A,b)
matrix(c(3, 2, 1, 2, -1, -3, -1, 2, 4), ncol = 3)
matrix(c(4,10,5))
solve(A,b)
A <- matrix(c(3, 2, 1, 2, -1, -3, -1, 2, -4), ncol = 3)
b <= matrix(c(4,10,5))
solve(A,b)
A <- matrix(c(3, 2, 1, 2, -1, -3, -1, 2, -4), ncol = 3)
b <= matrix(c(4,10,5),ncol = 1)
b <- matrix(c(4,10,5),ncol = 1)
solve(A,b)
?solve
solve(A)
test <- solve(A)
text %*% b
b <- matrix(c(4,10,5),ncol = 1)
text %*% b
b %&% text
b %*% text
b <- matrix(c(4,10,5),ncol = 1)
solve(A,b)
test <- solve(A)
b %*% test
test %*% b
matrix(c(1,1,17,-18.3),ncol = 2)
matrix(c(29.44, -31.75),ncol = 1)
test <- matrix(c(30.5, -0.065),cnol = 1)
test <- matrix(c(30.5, -0.065),ncol = 1)
test
A %*% test
A
A <- matrix(c(1,1,17,-18.3),ncol = 2)
A %*% test
A
A <- matrix(c(1,1,17,18.3),ncol = 2)
b <- matrix(c(29.44, -31.75),ncol = 1)
solve(A,b)
A <- matrix(c(1,1,17,18.3),ncol = 2)
b <- matrix(c(29.44, 31.75),ncol = 1)
solve(A,b)
s <- matrix(c(sqrt(1/3*s1t, sqrt(1/3*s3c),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
s <- matrix(c(sqrt(1/3*s1t), sqrt(1/3*s3c),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
s <- matrix(c(sqrt(1/3*s1t^2), sqrt(1/3*s3c^2),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
s <- matrix(c(sqrt(1/3*s1t^2), sqrt(1/3*s3c^2)),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
solve(KA,s)
9*16
s3c <- -55 # MPa
s1t <- 51 # MPa
s <- matrix(c(sqrt(1/3*s1t^2), sqrt(1/3*s3c^2)),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
solve(KA,s)
test <- solve(KA)
solve(KA)
s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c)),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
solve(KA,s)
s3c <- 55 # MPa
s1t <- 51 # MPa
s <- matrix(c(sqrt(1/3)*s1t, sqrt(1/3)*s3c),nrow = 2)
KA <- matrix(c(1,1,51/3,-55/3), ncol = 2)
solve(KA,s)
rm(list = ls())
p1 <- 1:500
VonMises <- function(s1){
s2 <- s1/2
s3 <- 0
sqrt(2)/2*((s1-s2)^2 + (s2-s3)^2 + (s1 - s3)^2)^(1/2)
}
p1 <- 1:500
yield <- VonMises(p1)
plot(p1, yield)
p1 <- 250:350
yield <- VonMises(p1)
plot(p1, yield)
epsilon <- seq(0,1,o.05)
epsilon <- seq(0,1,0.05)
sigma <- 25 + 200 * epsilon^(0.5)
plot(sigma, epsilon)
plot(epsilon,sigma )
n <- c(1,1,-1)
l <- c(2,2,1)
sum(n*l)
n%*%l
crossprod(n,l)
5*3^(1/2)/9
3/(3*3^(1/2))
install.packages("Ryacas")
?ryacas
?seq
200*10^-6 / 10
rm(list = ls())
K <- 4e6
d <- seq(200*10^-6, 0, 2e-5)
d <- seq(0, 200*10^-6, 2e-5)
pi
Sigma <- K/(sqrt(pi*d/2))
plot(d,Sigma)
plot(d,Sigma, ylab = "Stress [Pa]", xlab = "Grain Size [m]")
lines(d,Sigma)
s2 <- 3.19/sqrt(d)
s2
Sigma
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [Pa]", xlab = "Grain Size [m]")
Sigma
lines(d,Sigma)
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]")
lines(d,Sigma)
d <- seq(0, 200*e-6, 2e-5)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]")
lines(d,Sigma)
d <- seq(0, 200*e-6, 1e-5)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]")
lines(d,Sigma)
d <- seq(0, 200e-6, 1e-5)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]")
lines(d,Sigma)
d <- seq(0, 200, 10)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]")
lines(d,Sigma)
s2 <- 3.19/sqrt(d)
d <- seq(0, 200e-6, 10)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,400))
lines(d,Sigma)
d <- seq(0, 200e-6, 1e-5)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,400))
lines(d,Sigma)
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,1000))
lines(d,Sigma)
Sigma <- K/(sqrt(pi*d/2))
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,1000))
lines(d,Sigma)
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,100))
lines(d,Sigma)
d <- seq(0, 200e-6, 1e-5)
K <- 4e6
Sigma <- K/(sqrt(pi*d/2))/1e6
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,100))
lines(d,Sigma)
plot(d,Sigma, ylab = "Stress [MPa]", xlab = "Grain Size [m]", ylim = c(0,1000))
lines(d,Sigma)
?read.table
test <- read.table("/Users/Lampe/Documents/UNM_Courses/ME-571_AdvMaterialScience_Tehrani/ME-571_R/TransTemp.rtfd",
header = TRUE)
test <- read.table("/Users/Lampe/Documents/UNM_Courses/ME-571_AdvMaterialScience_Tehrani/ME-571_R/TransTemp.csv",
header = TRUE)
test <- read.table("/Users/Lampe/Documents/UNM_Courses/ME-571_AdvMaterialScience_Tehrani/ME-571_R/TransTemp.csv",
header = TRUE)
View(test)
test <- read.csv("/Users/Lampe/Documents/UNM_Courses/ME-571_AdvMaterialScience_Tehrani/ME-571_R/TransTemp.csv",
header = TRUE)
View(test)
TestTemp <- test[,1:5]
View(TestTemp)
library(ggplot)
library(ggplot2)
library(reshape2)
?melt
TestTemp.long <- melt(TestTemp, id.vars = Temp)
TestTemp.long <- melt(TestTemp, id.vars = "Temp")
View(TestTemp.long)
colnames(TestTemp.long) <- c("Temp", "Allow", "Energy")
p <- ggplot(TestTemp, x = Temp)
p <- p + geom_point(aes(y = Energy))
p <- p + facet_grid(~ Allow)
p
p <- p + facet_grid(~ Alloy)
p
p <- ggplot(TestTemp, x = Temp)
p <- p + geom_point(aes(y = Energy))
p <- p + facet_grid(~ Alloy)
p
p <- ggplot(TestTemp, x = Temp)
p <- p + geom_point(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- ggplot(TestTemp, x = Temp)
p <- p + geom_point(aes(y = Energy))
# p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- ggplot(TestTemp.long, x = Temp)
p <- p + geom_point(aes(y = Energy))
# p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- ggplot(TestTemp.long, aes(x = Temp))
p <- p + geom_point(aes(y = Energy))
# p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- ggplot(TestTemp.long, aes(x = Temp))
p <- p + geom_point(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
colnames(TestTemp.long) <- c("Temp", "Alloy", "Energy")
p <- ggplot(TestTemp.long, aes(x = Temp))
p <- p + geom_point(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
TestTemp <- test[,1:5]
colnames(TestTemp) <- c("Temperature", "0%Ni", "2%Ni", "5%Ni", "8%Ni")
library(ggplot2)
library(reshape2)
TestTemp.long <- melt(TestTemp, id.vars = "Temp")
colnames(TestTemp.long) <- c("Temp", "Alloy", "Energy")
p <- ggplot(TestTemp.long, aes(x = Temp))
p <- p + geom_point(aes(y = Energy))
p <- p + gemp_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
colnames(TestTemp.long) <- c("Temperature", "Alloy", "Energy")
p <- ggplot(TestTemp.long, aes(x = Temp))
p <- p + geom_point(aes(y = Energy))
p <- p + geom_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- ggplot(TestTemp.long, aes(x = Temperature))
p <- p + geom_point(aes(y = Energy))
p <- p + geom_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p
p <- p + labs(y = "Energy Level [in J/m^2"], x = "Temperature [C]")
p
p <- ggplot(TestTemp.long, aes(x = Temperature))
p <- p + geom_point(aes(y = Energy))
p <- p + geom_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p <- p + labs(y = "Energy Level [in J/m^2"], x = "Temperature [C]")
p <- ggplot(TestTemp.long, aes(x = Temperature))
p <- p + geom_point(aes(y = Energy))
p <- p + geom_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p <- p + labs(y = "Energy Level [in J/m^2]", x = "Temperature [C]")
p
?melt
TestTemp.long <- melt(TestTemp, id.vars = "Temp", factorsAsStrings = TRUE)
TestTemp.long <- melt(TestTemp, id.vars = "Temp", factorsAsStrings = FALSE)
TestTemp.long <- melt(TestTemp, id.vars = "Temperature", factorsAsStrings = TRUE)
colnames(TestTemp.long) <- c("Temperature", "Alloy", "Energy")
p <- ggplot(TestTemp.long, aes(x = Temperature))
p <- p + geom_point(aes(y = Energy))
p <- p + geom_line(aes(y = Energy))
p <- p + facet_wrap(~ Alloy, ncol = 2)
p <- p + labs(y = "Energy Level [in J/m^2]", x = "Temperature [C]")
p
